---


# Swarm settings
swarm_networks:
  - name: backend
    attachable: true
    driver: overlay
    ipam_config:
      - subnet: 10.8.0.0/24


# Consul settings
consul_agent_server: true
consul_container_networks:
  - name: backend

consul_exporter_enabled: true


# Prometheus settings
node_exporter_container_networks:
  - name: backend

cadvisor_container_networks:
  - name: backend

blackbox_container_networks:
  - name: backend

prometheus_server_enabled: true
prometheus_server_storage_retention: 90d

prometheus_server_consul_host: consul.service.consul

prometheus_server_exporters:
  - blackbox-exporter
  - cadvisor-exporter
  - docker-exporter
  - loki-exporter
  - node-exporter
  - postgresql-exporter
  - promtail-exporter
  - traefik-exporter

prometheus_server_blackbox_targets:
  - "https://consul.{{ domain }}"
  - "https://grafana.{{ domain }}"
  - "https://prometheus.{{ domain }}"
  - "https://passport.{{ domain }}/-/meta"
  - "https://wallet.{{ domain }}/-/meta"
  - "https://shortner.{{ domain }}/-/meta"

prometheus_server_jobs:
  - name: apps
    metrics_path: /-/metrics
    consul_config: true
    services:
      - apollo
      - passport
      - wallet
      - shortner

prometheus_container_dns_servers:
  - "{{ private_network.address }}"
prometheus_container_networks:
  - name: backend

# Minio settings
minio_enabled: true

# Loki settings
loki_enabled: true

loki_container_networks:
  - name: backend

loki_boltdb_storage: true
loki_filesystem_storage: true

loki_aws_storage: true
loki_aws_storage_s3: "s3://{{ minio_access_key }}:{{ minio_secret_key }}@s3.{{ domain }}/logs"

loki_schema_configs:
  - from: 2020-11-01
    store: boltdb
    object_store: aws
    schema: v11
    index:
      prefix: index_
      period: 336h

promtail_container_networks:
  - name: backend


# Grafana settings
grafana_enabled: true
grafana_container_dns_servers:
  - "{{ private_network.address }}"

grafana_datasource_prometheus: true
grafana_datasource_prometheus_url: http://prometheus.service.consul:9090

grafana_datasource_loki: true
grafana_datasource_loki_url: http://loki.service.consul:3100

grafana_domain: "https://grafana.{{ domain }}"

grafana_auth_user: "{{ lookup('hashivault', 'services/grafana/users/admin', 'user', mount_point='/secrets', version=2) }}"
grafana_auth_password: "{{ lookup('hashivault', 'services/grafana/users/admin', 'password', mount_point='/secrets', version=2) }}"


# Traefik settings
traefik_enabled: true

traefik_consul_provider: true
traefik_consul_provider_host: consul.service.consul

traefik_container_networks:
  - name: backend

traefik_letsencrypt: true
traefik_letsencrypt_email: dev@clayman.pro

traefik_basic_auth:
  - name: "{{ lookup('hashivault', 'services/consul/users/consul', 'user', mount_point='/secrets', version=2) }}"
    password: "{{ lookup('hashivault', 'services/consul/users/consul', 'password', mount_point='/secrets', version=2) }}"
  - name: "{{ lookup('hashivault', 'services/prometheus/users/prometheus', 'user', mount_point='/secrets', version=2) }}"
    password: "{{ lookup('hashivault', 'services/prometheus/users/prometheus', 'password', mount_point='/secrets', version=2) }}"
  - name: "{{ lookup('hashivault', 'services/alertmanager/users/alertmanager', 'user', mount_point='/secrets', version=2) }}"
    password: "{{ lookup('hashivault', 'services/alertmanager/users/alertmanager', 'password', mount_point='/secrets', version=2) }}"


# Postgresql settings
postgresql:
  version: 12

  postgis:
    enabled: no
    version: 2.5

  config:
    max_connections: '20'
    superuser_reserved_connections: '3'
    shared_buffers: '128MB'

    work_mem: '16MB'
    maintenance_work_mem: '64MB'
    effective_cache_size: '64MB'

    autovacuum: on
    autovacuum_max_workers: 1

    log_min_duration_statement: 1000
    logging_collector: 'off'

  allowed_networks:
    - 172.0.0.0/8  # Docker network
    - "{{ private_network['network'] }}/24"  # Private cluster network

  server:
    host: "{{ private_network.address }}"
    port: 5432

  service_dir: "{{ services_dir }}/postgresql"

  users:
    prometheus:
      user: "{{ lookup('hashivault', 'services/postgresql/users/prometheus', 'user', mount_point='/secrets', version=2) }}"
      password: "{{ lookup('hashivault', 'services/postgresql/users/prometheus', 'password', mount_point='/secrets', version=2) }}"
    backups:
      user: "{{ lookup('hashivault', 'services/postgresql/users/backups', 'user', mount_point='/secrets', version=2) }}"
      password: "{{ lookup('hashivault', 'services/postgresql/users/backups', 'password', mount_point='/secrets', version=2) }}"
    passport:
      user: "{{ lookup('hashivault', 'services/postgresql/users/passport', 'user', mount_point='/secrets', version=2) }}"
      password: "{{ lookup('hashivault', 'services/postgresql/users/passport', 'password', mount_point='/secrets', version=2) }}"
    wallet:
      user: "{{ lookup('hashivault', 'services/postgresql/users/wallet', 'user', mount_point='/secrets', version=2) }}"
      password: "{{ lookup('hashivault', 'services/postgresql/users/wallet', 'password', mount_point='/secrets', version=2) }}"

  databases:
    passport:
      name: passport
      owner: passport
    wallet:
      name: wallet
      owner: wallet

  extensions: {}

  exporter:
    enabled: yes

    host: "{{ private_network.address }}"
    port: 9187

    container:
      image: wrouesnel/postgres_exporter
      name: postgresql_exporter
      dns: "{{ private_network.address }}"
      restart: always

    schema: prometheus
    user: "{{ lookup('hashivault', 'services/postgresql/users/prometheus', 'user', mount_point='/secrets', version=2) }}"
    password: "{{ lookup('hashivault', 'services/postgresql/users/prometheus', 'password', mount_point='/secrets', version=2) }}"


# Vault settings
vault:
  service_dir: "{{ services_dir }}/vault"

  host: "{{ private_network.address }}"
  port: 8200

  container:
    image: vault:1.5.3
    name: vault
    restart: always
    network: backend

    syslog:
      enabled: true
      host: unixgram:///dev/log
      tag: vault


services:
  - name: consul
    entries:
      - name: consul-web
        host: "{{ consul_host }}"
        port: "{{ consul_port }}"
        tags:
          - "{{ tier }}"
          - "traefik.enable=true"
          - "traefik.http.routers.consul-web.rule=Host(`consul.{{ domain }}`)"
          - "traefik.http.routers.consul-web.entrypoints=web"
          - "traefik.http.routers.consul-web.service=consul-web"
          - "traefik.http.routers.consul-web.middlewares=consul-web-redirect@consulcatalog"

          - "traefik.http.middlewares.consul-web-auth.basicauth.usersfile=/etc/traefik/conf.d/consul.htpasswd"
          - "traefik.http.middlewares.consul-web-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.consul-web-redirect.redirectscheme.permanent=true"

          - "traefik.http.routers.consul-web-secure.rule=Host(`consul.{{ domain }}`)"
          - "traefik.http.routers.consul-web-secure.entrypoints=websecure"
          - "traefik.http.routers.consul-web-secure.service=consul-web"
          - "traefik.http.routers.consul-web-secure.middlewares=consul-web-auth@consulcatalog"
          - "traefik.http.routers.consul-web-secure.tls=true"
          - "traefik.http.routers.consul-web-secure.tls.certresolver={{ traefik_letsencrypt_resolver }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"
      - "{{ consul_exporter_service }}"

  - name: prometheus
    entries:
      - "{{ node_exporter_service }}"
      - "{{ cadvisor_service }}"
      - "{{ docker_exporter_service }}"
      - "{{ blackbox_service }}"
      - name: prometheus
        host: "{{ prometheus_server_host }}"
        port: "{{ prometheus_server_port }}"
        tags:
          - "{{ tier }}"
          - "traefik.enable=true"
          - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{ domain }}`)"
          - "traefik.http.routers.prometheus.entrypoints=web"
          - "traefik.http.routers.prometheus.service=prometheus"
          - "traefik.http.routers.prometheus.middlewares=prometheus-redirect@consulcatalog"

          - "traefik.http.middlewares.prometheus-auth.basicauth.usersfile=/etc/traefik/conf.d/prometheus.htpasswd"
          - "traefik.http.middlewares.prometheus-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.prometheus-redirect.redirectscheme.permanent=true"

          - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.{{ domain }}`)"
          - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
          - "traefik.http.routers.prometheus-secure.service=prometheus"
          - "traefik.http.routers.prometheus-secure.tls=true"
          - "traefik.http.routers.prometheus-secure.tls.certresolver={{ traefik_letsencrypt_resolver }}"
          - "traefik.http.routers.prometheus-secure.middlewares=prometheus-auth@consulcatalog"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"

  - name: loki
    entries:
      - "{{ loki_service }}"
      - "{{ loki_exporter_service }}"

  - name: promtail
    entries:
      - "{{ promtail_exporter_service }}"

  - name: minio
    entries:
      - name: minio
        host: "{{ minio_host }}"
        port: "{{ minio_port }}"
        tags:
          - "{{ tier }}"
          - "traefik.enable=true"
          - "traefik.http.routers.minio.rule=Host(`s3.{{ domain }}`)"
          - "traefik.http.routers.minio.entrypoints=web"
          - "traefik.http.routers.minio.service=minio"
          - "traefik.http.routers.minio.middlewares=minio-redirect@consulcatalog"

          - "traefik.http.middlewares.minio-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.minio-redirect.redirectscheme.permanent=true"

          - "traefik.http.routers.minio-secure.rule=Host(`s3.{{ domain }}`)"
          - "traefik.http.routers.minio-secure.entrypoints=websecure"
          - "traefik.http.routers.minio-secure.service=minio"
          - "traefik.http.routers.minio-secure.tls=true"
          - "traefik.http.routers.minio-secure.tls.certresolver={{ traefik_letsencrypt_resolver }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"
        checks:
          - id: "minio_server_check"
            name: "Minio servers healtcheck"
            http: "http://{{ minio_host }}:{{ minio_port }}/minio/health/live"
            interval: "20s"

  - name: grafana
    entries:
      - name: grafana
        host: "{{ grafana_host }}"
        port: "{{ grafana_port }}"
        tags:
          - "{{ tier }}"
          - "traefik.enable=true"
          - "traefik.http.routers.grafana.rule=Host(`grafana.{{ domain }}`)"
          - "traefik.http.routers.grafana.entrypoints=web"
          - "traefik.http.routers.grafana.service=grafana"
          - "traefik.http.routers.grafana.middlewares=grafana-redirect@consulcatalog"

          - "traefik.http.middlewares.grafana-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.grafana-redirect.redirectscheme.permanent=true"

          - "traefik.http.routers.grafana-secure.rule=Host(`grafana.{{ domain }}`)"
          - "traefik.http.routers.grafana-secure.entrypoints=websecure"
          - "traefik.http.routers.grafana-secure.service=grafana"
          - "traefik.http.routers.grafana-secure.tls=true"
          - "traefik.http.routers.grafana-secure.tls.certresolver={{ traefik_letsencrypt_resolver }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"

  - name: vault
    entries:
      - name: vault
        host: "{{ vault.host }}"
        port: "{{ vault.port }}"
        tags:
          - "{{ tier }}"
          - "traefik.enable=true"
          - "traefik.http.routers.vault.rule=Host(`vault.{{ domain }}`)"
          - "traefik.http.routers.vault.entrypoints=web"
          - "traefik.http.routers.vault.service=vault"
          - "traefik.http.routers.vault.middlewares=vault-redirect@consulcatalog"

          - "traefik.http.middlewares.vault-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.vault-redirect.redirectscheme.permanent=true"

          - "traefik.http.routers.vault-secure.rule=Host(`vault.{{ domain }}`)"
          - "traefik.http.routers.vault-secure.entrypoints=websecure"
          - "traefik.http.routers.vault-secure.service=vault"
          - "traefik.http.routers.vault-secure.tls=true"
          - "traefik.http.routers.vault-secure.tls.certresolver={{ traefik_letsencrypt_resolver }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"

  - name: postgresql
    entries:
      - name: postgresql
        host: "{{ postgresql.server.host }}"
        port: "{{ postgresql.server.port }}"
        tags:
          - "{{ tier }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"
      - name: postgresql-exporter
        host: "{{ postgresql.exporter.host }}"
        port: "{{ postgresql.exporter.port }}"
        tags:
          - "{{ tier }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ tier }}"
        checks:
          - id: "postgresql_exporter_check"
            name: "Prometheus exporter for Postgresql"
            http: "http://{{ postgresql.exporter.host }}:{{ postgresql.exporter.port }}"
            interval: "20s"
