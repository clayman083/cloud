---

prometheus:
  server:
    enabled: yes

    host: "{{ private_network.address }}"
    port: 9090

    storage_retention: 90d

    exporters:
      - node-exporter
      - cadvisor-exporter
      - docker-exporter
      - loki-exporter
      - promtail-exporter
      - traefik-exporter

    services:
      - passport
      - wallet

  alertmanager:
    enabled: no

    slack:
      enabled: no
      api_url: ''
      channel: 'general'
      username: 'Prometheus'


# Grafana settings
grafana:
  dir: "{{ services_dir }}/grafana"
  dashboards_dir: "{{ services_dir }}/grafana/dashboards"

  host: "{{ private_network.address }}"
  port: 3000

  container:
    image: grafana/grafana:6.6.0
    name: grafana
    dns: "{{ private_network.address }}"
    network: ""
    restart: always

    syslog:
      enabled: yes
      host: unixgram:///dev/log
      tag: grafana

  dashboards: []

  datasources: {}
    # prometheus:
    #   name: Prometheus
    #   url: prometheus.service.consul

    # loki:
    #   name: Loki
    #   url: loki.service.consul

  frontend:
    domain: https://grafana.dev.clayman.pro

    auth:
      user: grafana
      password: grafana


# Vault settings
vault:
  service_dir: "{{ services_dir }}/vault"

  host: "{{ private_network.address }}"
  port: 8200

  container:
    image: vault:1.3.1
    name: vault
    restart: always
    network: ''

    syslog:
      enabled: true
      host: unixgram:///dev/log
      tag: vault


# Consul services settings
services:
  - name: grafana
    entries:
      - name: grafana
        host: "{{ grafana.host }}"
        port: "{{ grafana.port }}"
        tags:
          - "{{ env }}"
          - "traefik.enable=true"
          - "traefik.http.routers.grafana.rule=Host(`grafana.dev.clayman.pro`)"
          - "traefik.http.routers.grafana.entrypoints=web"
          - "traefik.http.routers.grafana.service=grafana"
          - "traefik.http.routers.grafana.middlewares=grafana-redirect@consulcatalog"
          - "traefik.http.routers.grafana-secure.rule=Host(`grafana.dev.clayman.pro`)"
          - "traefik.http.routers.grafana-secure.entrypoints=websecure"
          - "traefik.http.routers.grafana-secure.service=grafana"
          - "traefik.http.routers.grafana-secure.tls=true"
          - "traefik.http.middlewares.grafana-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.grafana-redirect.redirectscheme.permanent=true"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"

  - name: prometheus
    entries:
      - name: prometheus
        host: "{{ prometheus.server.host }}"
        port: "{{ prometheus.server.port }}"
        tags:
          - "{{ env }}"
          - "traefik.enable=true"
          - "traefik.http.routers.prometheus.rule=Host(`prometheus.dev.clayman.pro`)"
          - "traefik.http.routers.prometheus.entrypoints=web"
          - "traefik.http.routers.prometheus.service=prometheus"
          - "traefik.http.routers.prometheus.middlewares=prometheus-redirect@consulcatalog"
          - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.dev.clayman.pro`)"
          - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
          - "traefik.http.routers.prometheus-secure.service=prometheus"
          - "traefik.http.routers.prometheus-secure.middlewares=prometheus-auth@consulcatalog"
          - "traefik.http.routers.prometheus-secure.tls=true"
          - "traefik.http.middlewares.prometheus-auth.basicauth.usersfile=/etc/traefik/conf.d/prometheus.htpasswd"
          - "traefik.http.middlewares.prometheus-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.prometheus-redirect.redirectscheme.permanent=true"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"
      - name: node-exporter
        host: "{{ prometheus.node_exporter.host }}"
        port: "{{ prometheus.node_exporter.port }}"
        tags:
          - "{{ env }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"
        checks:
          - id: "node_exporter_check"
            name: "Prometheus exporter for Node metrics"
            http: "http://{{ prometheus.node_exporter.host }}:{{ prometheus.node_exporter.port }}"
            interval: "20s"
      - name: cadvisor-exporter
        host: "{{ prometheus.cadvisor_exporter.host }}"
        port: "{{ prometheus.cadvisor_exporter.port }}"
        tags:
          - "{{ env }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"
        checks:
          - id: "cadvisor_exporter_check"
            name: "Prometheus exporter for Cadvisor metrics"
            http: "http://{{ prometheus.cadvisor_exporter.host }}:{{ prometheus.cadvisor_exporter.port }}"
            interval: "20s"
      - name: docker-exporter
        host: "{{ prometheus.docker_exporter.host }}"
        port: "{{ prometheus.docker_exporter.port }}"
        tags:
          - "{{ env }}"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"
        checks:
          - id: "docker_exporter_check"
            name: "Prometheus exporter for Docker engine metrics"
            http: "http://{{ prometheus.docker_exporter.host }}:{{ prometheus.docker_exporter.port }}/metrics"
            interval: "20s"

  - name: vault
    entries:
      - name: vault
        host: "{{ vault.host }}"
        port: "{{ vault.port }}"
        tags:
          - "{{ env }}"
          - "traefik.enable=true"
          - "traefik.http.routers.vault.rule=Host(`vault.dev.clayman.pro`)"
          - "traefik.http.routers.vault.entrypoints=web"
          - "traefik.http.routers.vault.service=vault"
          - "traefik.http.routers.vault.middlewares=vault-redirect@consulcatalog"
          - "traefik.http.routers.vault-secure.rule=Host(`vault.dev.clayman.pro`)"
          - "traefik.http.routers.vault-secure.entrypoints=websecure"
          - "traefik.http.routers.vault-secure.service=vault"
          - "traefik.http.routers.vault-secure.tls=true"
          - "traefik.http.middlewares.vault-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.vault-redirect.redirectscheme.permanent=true"
        meta:
          hostname: "{{ ansible_hostname }}"
          tier: "{{ env }}"
