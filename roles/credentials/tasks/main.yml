---

- name: Prepare folder for credentials
  file:
    path: "{{ keys_dir }}/{{ hostvars[item]['tier'] }}/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}/"
    state: directory
    mode: 0755
  with_items: "{{ nodes }}"
  tags:
    - ssh-keys

- name: Download private keys for servers
  hashivault_read:
    mount_point: "secrets"
    secret: "nodes/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}"
    key: 'private_key'
    version: 2
  with_items: "{{ nodes }}"
  loop_control:
    label: "{{ item }}"
  register: 'private_keys'
  tags:
    - ssh-keys

- name: Write private key to file
  copy:
    content: "{{ item.value }}"
    dest: "{{ keys_dir }}/{{ hostvars[item.item]['tier'] }}/{{ item.item }}/users/{{ hostvars[item.item]['ansible_user'] }}/id_rsa"
    mode: 0600
  with_items: "{{ private_keys.results }}"
  loop_control:
    label: "{{ item.item }}"
  tags:
    - ssh-keys

- name: Download public keys for servers
  hashivault_read:
    mount_point: "secrets"
    secret: "nodes/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}"
    key: 'public_key'
    version: 2
  with_items: "{{ nodes }}"
  loop_control:
    label: "{{ item }}"
  register: 'public_keys'
  tags:
    - ssh-keys

- name: Write public key to file
  copy:
    content: "{{ item.value }}"
    dest: "{{ keys_dir }}/{{ hostvars[item.item]['tier'] }}/{{ item.item }}/users/{{ hostvars[item.item]['ansible_user'] }}/id_rsa.pub"
    mode: 0600
  with_items: "{{ public_keys.results }}"
  loop_control:
    label: "{{ item.item }}"
  tags:
    - ssh-keys

- name: Fetch auth password for user
  block:
    - name: Download auth password for servers
      hashivault_read:
        mount_point: "secrets"
        secret: "nodes/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}"
        key: 'password'
        version: 2
      with_items: "{{ nodes }}"
      loop_control:
        label: "{{ item }}"
      register: 'auth_passwords'

    - name: Write auth password to file
      copy:
        content: "{{ item.value }}"
        dest: "{{ keys_dir }}/{{ hostvars[item.item]['tier'] }}/{{ item.item }}/users/{{ hostvars[item.item]['ansible_user'] }}/auth_password"
        mode: 0600
      with_items: "{{ auth_passwords.results }}"
      loop_control:
        label: "{{ item.item }}"
  rescue:
    - name: Generate auth password
      shell: openssl rand -base64 32 > auth_password
      args:
        chdir: "{{ keys_dir }}/{{ hostvars[item]['tier'] }}/{{ item }}/users/{{ hostvars[item]['ansible_user'] }}"
        creates: auth_password
      with_items: "{{ nodes }}"
